<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://esa.ssa/dpc/2.1/dpc" xmlns:dpc="http://esa.ssa/dpc/2.1/dpc" xmlns:catorb="http://esa.ssa.sst/2.1/catalogue/orbit/" xmlns:comsenc="http://esa.ssa.sst/2.1/common/sensors/common/" xmlns:com="http://esa.ssa.sst/2.1/common/" xmlns:omc="http://esa.ssa.sst/2.1/omc/" xmlns:eCCSDS="http://esa.ssa.sst/2.1/CCSDS/" xmlns:moag="http://eu.esa.ssa.gen.connectivity.moag/data/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://esa.ssa/dpc/2.1/dpc" xmlns:ndm="urn:ccsds:recommendation:navigation:schema:ndmxml" xmlns:cattr="http://esa.ssa.sst/2.1/catalogue/track/" xmlns:compl="http://esa.ssa.sst/2.1/common/planning/" xmlns:catobj="http://esa.ssa.sst/2.1/catalogue/object/" elementFormDefault="qualified">
	<xsd:import namespace="http://esa.ssa.sst/2.1/common/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/common/common.xsd"/>
	<xsd:import namespace="urn:ccsds:recommendation:navigation:schema:ndmxml" schemaLocation="../../../../commonSSTDataModel/CCSDS/ndmxml-1.0-namespace-1.1.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/catalogue/track/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/catalogue/track/track.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/common/planning/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/common/planning/planning.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/catalogue/object/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/catalogue/object/object.xsd"/>
	<xsd:import namespace="http://eu.esa.ssa.gen.connectivity.moag/data/" schemaLocation="../DPCMonitoringService/eu/esa/ssa/gen/connectivity/moag/data/data.xsd"/>
	<xsd:import namespace="urn:ccsds:recommendation:navigation:schema:ndmxml" schemaLocation="../../../../commonSSTDataModel/CCSDS/ndmxml-1.0-ccsds-common.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/common/sensors/common/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/common/sensors/common/common.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/catalogue/orbit/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/catalogue/orbit/orbit.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/CCSDS/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/extendedCCSDS/extendedCCSDS.xsd"/>
	<xsd:import namespace="http://esa.ssa.sst/2.1/omc/" schemaLocation="../../../../commonSSTDataModel/esa/ssa/sst/omc/omc.xsd"/>
	<!-- For avoiding problems with the Debris.xsd schema we have define here 
		this type for Correlation result -->
	<xsd:complexType name="Detection">
		<xsd:annotation>
			<xsd:documentation>&lt;p&gt;Objects detected during an observation
				campaign. Those objects may be correlated with the ones in database
				or not.&lt;/p&gt;</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="idDetection" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Unique number identifying this
						object.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="timeOfDetection" type="ndm:epochType">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Time the object is detected. UTC
						time-frame.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="estimatedOrbitParameters" type="catorb:Orbit">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Estimated orbit parameters of the given
						object.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="isCorrelated" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Boolean indicating if the object has
						been correlated with the existing ones in the catalog or if it is
						new.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="measuredParameters" type="cattr:SSTTrackingDataObservationType">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Measured parameters of the objects
						given by the sensor to compute the orbit.&lt;/p&gt;
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="sensor" type="comsenc:SensorType">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Parameters the sensor used to make the
						observation in term of signal for instance.&lt;/p&gt;
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="correlatedObject" type="catobj:Object" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;The object which is correlated to the
						detection if it already exists in the database.&lt;/p&gt;
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Include a new entry for accepting request when the DPC is not running -->
	<xsd:simpleType name="DPCConfirmationCodeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SUCCESSFUL CORRELATION"/>
			<xsd:enumeration value="SUCCESSFUL NEW"/>
			<xsd:enumeration value="SUCCESSFUL CATALOGUE UPDATE"/>
			<xsd:enumeration value="SUCCESSFUL ACCURACY LIMITS SETTING"/>
			<xsd:enumeration value="SUCCESSFUL VALIDITY PERIOD SETTING"/>
			<xsd:enumeration value="SUCCESSFUL  ACCEPTED"/>
			<xsd:enumeration value="REJECTED OBSERVATION"/>
			<xsd:enumeration value="REJECTED ORBIT"/>
			<xsd:enumeration value="REJECTED MANEUVER"/>
			<xsd:enumeration value="CATALOGUE NOT UPDATED"/>
			<xsd:enumeration value="SUCCESSFUL DATA RETRIEVAL"/>
			<xsd:enumeration value="SUCCESSFUL ACCURACY CHECK"/>
			<xsd:enumeration value="SUCCESSFUL ORBIT VALIDITY CHECK"/>
			<xsd:enumeration value="SUCCESSFUL COMPUTATION"/>
			<xsd:enumeration value="SUCCESSFUL PLANNING REQUEST GENERATION"/>
			<xsd:enumeration value="SUCCESSFUL ORBIT DETERMINATION"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DPCErrorCodeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="DPC RUNTIME EXCEPTION"/>
			<xsd:enumeration value="DPC OPERATION EXCEPTION"/>
			<xsd:enumeration value="REQUEST FAILED"/>
			<xsd:enumeration value="ARCHIVE SERVICE NOT AVAILABLE"/>
			<xsd:enumeration value="SST CATALOGUE NOT AVAILABLE"/>
			<xsd:enumeration value="INPUT PARAMETER EXCEPTION"/>
			<xsd:enumeration value="UNABLE TO GET DPC CURRENT STATUS"/>
			<xsd:enumeration value="UNABLE TO START DPC"/>
			<xsd:enumeration value="UNABLE TO STOP DPC"/>
			<xsd:enumeration value="WRONG OBJECT ID"/>
			<xsd:enumeration value="UNSUCCESSFUL ORBIT DETERMINATION"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EphemeredesFormatType">
		<xsd:annotation>
			<xsd:documentation>Enumeration of possible Orbit Format products.EGDS: Earth-fixed Geocentric Data Set&lt;OEDS: Osculating Elements Data Set&lt;MEDS: Mean Elements Data </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EDGS"/>
			<xsd:enumeration value="OEDS"/>
			<xsd:enumeration value="MEDS"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="DPCConfirmationCodeType" type="dpc:DPCConfirmationCodeType"/>
	<xsd:complexType name="DPCConfirmationType">
		<xsd:complexContent>
			<xsd:extension base="dpc:DPCObjectResponseType">
				<xsd:sequence>
					<xsd:element ref="dpc:DPCConfirmationCodeType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="DPCConfirmationType" type="dpc:DPCConfirmationType" substitutionGroup="dpc:DPCObjectResponseType"/>
	<xsd:element name="DPCErrorCodeType" type="dpc:DPCErrorCodeType"/>
	<xsd:complexType name="DPCErrorType">
		<xsd:complexContent>
			<xsd:extension base="dpc:DPCObjectResponseType">
				<xsd:sequence>
					<xsd:element ref="dpc:DPCErrorCodeType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="DPCErrorType" type="dpc:DPCErrorType" substitutionGroup="dpc:DPCObjectResponseType"/>
	<xsd:complexType name="DPCObjectResponseType" abstract="true"/>
	<xsd:element name="DPCObjectResponseType" type="dpc:DPCObjectResponseType"/>
	<xsd:complexType name="EphemeredesFormatEnum">
		<xsd:annotation>
			<xsd:documentation>&lt;p&gt;Enumeration of possible Orbit Format products.&lt;/p&gt;&lt;p&gt;Values inserted can be {0,'EGDS'}, {1,'OEDS'}, {2,'MEDS'}.&lt;/p&gt;&lt;p&gt;Values are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;EGDS: Earth-fixed Geocentric Data Set&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;OEDS: Osculating Elements Data Set&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MEDS: Mean Elements Data Set&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="index" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;Unique number identifying this object.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="label" type="tns:EphemeredesFormatType">
				<xsd:annotation>
					<xsd:documentation>&lt;p&gt;The name of this enumeration constant.&lt;/p&gt;</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TransitionMatrix">
		<xsd:sequence>
			<xsd:element name="row" type="dpc:TransitionMatrixRow" maxOccurs="8"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TransitionMatrixRow">
		<xsd:sequence maxOccurs="6">
			<xsd:element name="element" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="StateVectorParametersType">
		<xsd:sequence>
			<xsd:element name="CD" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>drag coefficient</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CREFL" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>solar radiation pressure or reflectivity coefficient</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationThirdPartyData">
		<xsd:sequence>
			<xsd:element name="objectID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>sst object id</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="epochOfProvidedData" type="ndm:epochType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationPossibleCandidates">
		<xsd:sequence>
			<xsd:element name="possibleCandidates" type="dpc:CorrelationCandidateType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationNonConsistentID">
		<xsd:sequence>
			<xsd:element name="observationID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>observationID from input xml</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="objectID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>sst object ID as per observational data</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationPreliminaryNewOrbit">
		<xsd:sequence>
			<xsd:element name="objectID" type="xsd:long"/>
			<xsd:element name="time" type="ndm:epochType"/>
			<xsd:element name="stateVector" type="ndm:stateVectorType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationNewOrbit">
		<xsd:sequence>
			<xsd:element name="objectID" type="xsd:long"/>
			<xsd:element name="time" type="ndm:epochType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationRejectedObservations">
		<xsd:sequence>
			<xsd:element name="rejectedObservations" type="dpc:RejectedObservationType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationUnsuccessfulOrbitDetermination">
		<xsd:sequence>
			<xsd:element name="objectID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>sst object ID</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="observationID" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationObservationRequest">
		<xsd:sequence>
			<xsd:element name="requestID" type="xsd:long"/>
			<xsd:element name="objectID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>sst object ID</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="requestTime" type="xsd:dateTime"/>
			<xsd:element name="expirationTime" type="xsd:dateTime"/>
			<xsd:element name="requiredImprovementInAccuracy" type="compl:AccuracyTargetType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationDPCCriticalError">
		<xsd:sequence>
			<xsd:element name="DPCcomponentID" type="xsd:long"/>
			<xsd:element name="criticality" type="dpc:CriticalityEnum"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationDPCRunningProcesses">
		<xsd:sequence>
			<xsd:element name="processesList" type="dpc:ProcessStatusType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationDPCStartStatus">
		<xsd:sequence>
			<xsd:element name="startOperationStatus" type="dpc:OperationStatusEnum"/>
			<xsd:element name="problemDescription" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="NotificationDPCStopStatus">
		<xsd:sequence>
			<xsd:element name="stopOperationStatus" type="dpc:OperationStatusEnum"/>
			<xsd:element name="problemDescription" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="RejectedObservationType">
		<xsd:sequence>
			<xsd:element name="observationID" type="xsd:long"/>
			<xsd:element name="rejectedMeasurement" type="cattr:SSTTrackingDataObservationType"/>
			<xsd:element name="measurementResidual" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProcessStatusType">
		<xsd:sequence>
			<xsd:element name="processID" type="xsd:long"/>
			<xsd:element name="status" type="dpc:ProcessStatusEnum"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CorrelationCandidateType">
		<xsd:sequence>
			<xsd:element name="objectID" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>candidate sst object ID</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="correlationMark" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>candidate correlation mark</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CovarianceMatrixAddDataType">
		<xsd:sequence>
			<xsd:element name="Cd_Cd" type="xsd:double"/>
			<xsd:element name="Cd_CREFL" type="xsd:double"/>
			<xsd:element name="CREFL_CREFL" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="ChangeTypeEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="CREATED"/>
			<xsd:enumeration value="MODIFIED"/>
			<xsd:enumeration value="DELETED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CriticalityEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ERROR"/>
			<xsd:enumeration value="WARNING"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ProcessStatusEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="RUNNING"/>
			<xsd:enumeration value="NOT RUNNING"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OperationStatusEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="OK"/>
			<xsd:enumeration value="NOT OK"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--  HMI Process Monitoring -->
	<xsd:complexType name="InputRequestOverview">
		<xsd:sequence>
			<xsd:element name="ProcessTypeId" type="tns:ProcessInputType"/>
			<xsd:element name="ProcessType" type="xsd:string"/>
			<xsd:element name="Received" type="xsd:long"/>
			<xsd:element name="Accepted" type="xsd:long"/>
			<xsd:element name="Rejected" type="xsd:long"/>
			<xsd:element name="Success" type="xsd:long"/>
			<xsd:element name="Error" type="xsd:long"/>
			<xsd:element name="OnGoingOK" type="xsd:long"/>
			<xsd:element name="OnGoingExceed" type="xsd:long"/>
			<xsd:element name="FinishOK" type="xsd:long"/>
			<xsd:element name="FinishExceed" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OutputRequestOverview">
		<xsd:sequence>
			<xsd:element name="ProcessTypeId" type="tns:ProcessOutputType"/>
			<xsd:element name="ProcessType" type="xsd:string"/>
			<xsd:element name="Raised" type="xsd:long"/>
			<xsd:element name="Processed" type="xsd:long"/>
			<xsd:element name="Pending" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="ProcessInputType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="OBSERVATION_DATA"/>
			<xsd:enumeration value="THIRDPARTY_DATA"/>
			<xsd:enumeration value="CORRELATION"/>
			<xsd:enumeration value="ODPROCESS"/>
			<xsd:enumeration value="QUALITY"/>
			<xsd:enumeration value="CATALOGUE_UPDATE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ProcessOutputType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="PLANNING_REQUEST"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ReportType">
		<xsd:sequence>
			<xsd:element name="Report" type="dpc:ReportItemType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ReportItemType">
		<xsd:sequence>
			<xsd:element name="Time" type="xsd:double"/>
			<xsd:element name="Value" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SigPosErrorReportItemList">
		<xsd:sequence>
			<xsd:element name="Report" type="dpc:SigPosErrorReportItem" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SigPosErrorReportItem">
		<xsd:sequence>
			<xsd:element name="Time" type="xsd:double"/>
			<xsd:element name="Value" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SigPosErrorReportType">
		<xsd:sequence>
			<xsd:element name="AlongTrack" type="dpc:SigPosErrorReportItemList"/>
			<xsd:element name="CrossTrack" type="dpc:SigPosErrorReportItemList"/>
			<xsd:element name="Radial" type="dpc:SigPosErrorReportItemList"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CorrelationReportType">
		<xsd:sequence>
			<xsd:element name="NEW" type="dpc:ReportType"/>
			<xsd:element name="UPDATED" type="dpc:ReportType"/>
			<xsd:element name="TOTAL" type="dpc:ReportType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ODProcessReportType">
		<xsd:sequence>
			<xsd:element name="IOD" type="dpc:ReportType"/>
			<xsd:element name="OD" type="dpc:ReportType"/>
			<xsd:element name="UNSUCCESSFULL" type="dpc:ReportType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PlaningReportType">
		<xsd:sequence>
			<xsd:element name="PROCESSED" type="dpc:ReportType"/>
			<xsd:element name="RAISED" type="dpc:ReportType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QualityReportType">
		<xsd:sequence>
			<xsd:element name="NumberOfProcess" type="xsd:long"/>
			<xsd:element name="ProcessViolatingAcc" type="xsd:long"/>
			<xsd:element name="NumberOfPlanningRequest" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ObservationReportType">
		<xsd:sequence>
			<xsd:element name="ACCEPTED" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="REJECTED" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="SUCCESS" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="ERROR" type="dpc:ReportType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ThirdPartyReportType">
		<xsd:sequence>
			<xsd:element name="ACCEPTED" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="REJECTED" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="SUCCESS" type="dpc:ReportType" minOccurs="0"/>
			<xsd:element name="ERROR" type="dpc:ReportType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!--  SST Data Processing -->
	<xsd:complexType name="PendingProcessType">
		<xsd:sequence>
			<xsd:element name="ProcessId" type="xsd:long"/>
			<xsd:element name="ThirdPartyData" type="xsd:boolean"/>
			<xsd:element name="ProcessStart" type="ndm:epochType"/>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Action" type="xsd:string" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- SensorObservationData -->
	<xsd:complexType name="DPCObservationDetails">
		<xsd:sequence>
			<xsd:element name="ObservationId" type="xsd:long"/>
			<xsd:element name="InitTime" type="ndm:epochType"/>
			<xsd:element name="EndTime" type="ndm:epochType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DPCSensorDataType">
		<xsd:sequence>
			<xsd:element name="SensorId" type="xsd:long"/>
			<xsd:element name="Radar" type="comsenc:RadarGroundSensorType"/>
			<xsd:element name="GBTEL" type="comsenc:OpticalGroundSensorType"/>
			<xsd:element name="SBTEL" type="comsenc:OpticalSpaceSensorType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DPCCatalogObjectType">
		<xsd:sequence>
			<xsd:element name="ObjectId" type="xsd:long"/>
			<xsd:element name="CosparId" type="xsd:string"/>
			<xsd:element name="Area" type="xsd:double"/>
			<xsd:element name="Mass" type="xsd:double"/>
			<xsd:element name="Time" type="xsd:string"/>
			<xsd:element name="StateVector11" type="xsd:string"/>
			<xsd:element name="CovMatrix11" type="xsd:string"/>
			<xsd:element name="OrbitElement6" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DPCCatalogType">
		<xsd:sequence>
			<xsd:element name="ObjectData" type="dpc:DPCCatalogObjectType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OrbitElementsType">
		<xsd:sequence>
			<xsd:element name="SemimajorAxis" type="xsd:double"/>
			<xsd:element name="Eccentricity" type="xsd:double"/>
			<xsd:element name="Inclination" type="xsd:double"/>
			<xsd:element name="RightAscension" type="xsd:double"/>
			<xsd:element name="ArgumentOfPerigee" type="xsd:double"/>
			<xsd:element name="TrueAnomaly" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FilterMinMaxValueType">
		<xsd:sequence>
			<xsd:element name="MinValue" type="xsd:double"/>
			<xsd:element name="MaxValue" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ObservationMeasurementType">
		<xsd:sequence>
			<xsd:element name="ObservationID" type="xsd:long"/>
			<xsd:element name="Measurement" type="eCCSDS:extendedTrackingDataObservationType"/>
			<xsd:element name="MeasurementResidual" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DPCCatalogueOverview">
		<xsd:sequence>
			<xsd:element name="OrbitTypeId" type="xsd:int"/>
			<xsd:element name="Total" type="xsd:long"/>
			<xsd:element name="ViolatingAcc" type="xsd:long"/>
			<xsd:element name="ExpiredTrack" type="xsd:long"/>
			<xsd:element name="NewObjects" type="xsd:long"/>
			<xsd:element name="UpdatedObjets" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CatalogReportItem">
		<xsd:sequence>
			<xsd:element name="Time" type="ndm:epochType"/>
			<xsd:element name="Total" type="xsd:long"/>
			<xsd:element name="ViolatingAcc" type="xsd:long"/>
			<xsd:element name="ExpiredTrack" type="xsd:long"/>
			<xsd:element name="NewObjects" type="xsd:long"/>
			<xsd:element name="UpdatedObjets" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ObservationIdItem">
		<xsd:sequence>
			<xsd:element name="ObservationId" type="xsd:long"/>
			<xsd:element name="SensorTypeId" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ThirdPartyIdItem">
		<xsd:sequence>
			<xsd:element name="RequestId" type="xsd:long"/>
			<xsd:element name="Provider" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
